services:
  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    restart: always
    command:
      - --config=/etc/otelcol-cont/otel-collector.yml
    volumes:
      - ./collector/otel-collector.yml:/etc/otelcol-cont/otel-collector.yml
    ports:
      - "8889:8889"
      - "4317"
      - "4318:4318"
    networks:
      - tracing_net
    depends_on:
      - tempo
      - loki

  mysql:
    image: mysql
    container_name: mysql
    restart: always # always restart
    environment:
      MYSQL_DATABASE: "lendors" # name of database
      MYSQL_USER: "kayle" # sample is the name of user
      MYSQL_PASSWORD: "freeatlast" # password for sample user
      MYSQL_ROOT_PASSWORD: "freeatlast" # password for root user
    ports:
      - "3306:3306" # host port 3306 is mapper to docker port 3306
    expose:
      - "3306"
    volumes:
      - ./mysql-db:/var/lib/mysql
    networks:
      - tracing_net

  mysql-exporter:
    image: prom/mysqld-exporter
    command:
      - --config.my-cnf=/cfg/.my.cnf
      - --mysqld.address=mysql:3306
    volumes:
      - "./mysql-db/.my.cnf:/cfg/.my.cnf"
    ports:
      - 9104:9104
    networks:
      - tracing_net

  pm2_monitor:
    build: ./pm2-monitor
    container_name: pm2_monitor
    ports:
      - "9209:9209"
    networks:
      - tracing_net

  nginx-app:
    container_name: nginx-app
    image: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/nginx.conf
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - 8081:80
    networks:
      - tracing_net

  tempo:
    container_name: tempo
    restart: always
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./tempo/tempo.yml:/etc/tempo.yml
      # - ./tempo/data:/tmp/tempo
    ports:
      - "4317"
      - "3200"
    networks:
      - tracing_net

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - promtail_positions:/tmp/positions
    command: -config.file=/etc/promtail/config.yml
    networks:
      - tracing_net

  loki:
    image: grafana/loki:latest
    restart: always
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      # - ./loki/loki-config.yml:/etc/loki/local-config.yml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    depends_on:
      - promtail
    networks:
      - tracing_net

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    ports:
      - "9090:9090"
    depends_on:
      - collector
    networks:
      - tracing_net

  blackbox:
    container_name: blackbox
    image: prom/blackbox-exporter
    ports:
      - "9115:9115"
    command:
      - "--config.file=/etc/blackbox_exporter/config.yml"
    volumes:
      - ./prometheus/blackbox.yml:/etc/blackbox_exporter/config.yml
    networks:
      - tracing_net

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.25.0
    restart: always
    ports:
      - "9093:9093"
    command: --config.file=/config/alertmanager.yml --log.level=debug
    volumes:
      - "./alertmanager:/config"
      - alertmanager_data:/data
    networks:
      - tracing_net
    depends_on:
      - prometheus

  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    depends_on:
      - prometheus
      - loki
      - tempo
    networks:
      - tracing_net

networks:
  tracing_net:

volumes:
  grafana_data:
  loki_data:
  prometheus_data:
  promtail_positions:
  alertmanager_data:
